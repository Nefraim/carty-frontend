{"ast":null,"code":"!function (e, t) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof exports ? exports.Brusher = t() : e.Brusher = t();\n}(window, function () {\n  return function (e) {\n    var t = {};\n\n    function n(a) {\n      if (t[a]) return t[a].exports;\n      var i = t[a] = {\n        i: a,\n        l: !1,\n        exports: {}\n      };\n      return e[a].call(i.exports, i, i.exports, n), i.l = !0, i.exports;\n    }\n\n    return n.m = e, n.c = t, n.d = function (e, t, a) {\n      n.o(e, t) || Object.defineProperty(e, t, {\n        configurable: !1,\n        enumerable: !0,\n        get: a\n      });\n    }, n.r = function (e) {\n      Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n    }, n.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return n.d(t, \"a\", t), t;\n    }, n.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, n.p = \"\", n(n.s = 1);\n  }([function (e, t, n) {\n    \"use strict\";\n\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var a = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n      return typeof e;\n    } : function (e) {\n      return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n    },\n        i = Object.assign || function (e) {\n      for (var t = 1; t < arguments.length; t++) {\n        var n = arguments[t];\n\n        for (var a in n) {\n          Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);\n        }\n      }\n\n      return e;\n    },\n        o = function () {\n      function e(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var a = t[n];\n          a.enumerable = a.enumerable || !1, a.configurable = !0, \"value\" in a && (a.writable = !0), Object.defineProperty(e, a.key, a);\n        }\n      }\n\n      return function (t, n, a) {\n        return n && e(t.prototype, n), a && e(t, a), t;\n      };\n    }();\n\n    var r = function () {\n      function e() {\n        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n        !function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, e), this.blurryStyleNode = null, this.mouseSteps = [], this.drawBoardCanvas = null, this.drawBoardCanvasContext = null, this.imageCanvas = null, this.imageCanvasContext = null, this.image = null, this.tailAnimationFrame = null, this.options = i({\n          image: null,\n          stroke: 80,\n          keepCleared: !1,\n          autoBlur: !1,\n          autoBlurValue: 15,\n          lineStyle: \"round\"\n        }, t, {\n          element: \"body\"\n        }), this.drawTail = this.drawTail.bind(this), this.validateOptions();\n      }\n\n      return o(e, [{\n        key: \"validateOptions\",\n        value: function value() {\n          if (!this.options.image) throw new Error(\"Image path to use as brush is required\");\n        }\n      }, {\n        key: \"init\",\n        value: function value() {\n          e.isCanvasSupported() && (this.prepareCanvas(), this.bind());\n        }\n      }, {\n        key: \"bind\",\n        value: function value() {\n          var e = this;\n          document.addEventListener(\"mousemove\", function (t) {\n            t.clientX && t.clientY && (e.mouseSteps.unshift(i({\n              time: Date.now()\n            }, e.getMousePositionInCanvas(t))), e.drawTail());\n          }), window.addEventListener(\"resize\", function () {\n            e.prepareCanvas();\n          });\n        }\n      }, {\n        key: \"getMousePositionInCanvas\",\n        value: function value(e) {\n          var t = this.drawBoardCanvas.getBoundingClientRect();\n          return {\n            x: e.clientX - t.left,\n            y: e.clientY - t.top\n          };\n        }\n      }, {\n        key: \"prepareCanvas\",\n        value: function value() {\n          this.options.autoBlur && this.attachBlurryBackground(), this.prepareDrawingCanvas(), this.prepareImageCanvas(), this.loadSelectedImage();\n        }\n      }, {\n        key: \"attachBlurryBackground\",\n        value: function value() {\n          if (!this.blurryStyleNode) {\n            var e = \"\\n      body { position: relative;  }\\n      body:before {\\n        background-size: cover;\\n        background-position: 0 0;\\n        background-attachment: fixed;\\n        content: '';\\n        background-image: url('\" + this.options.image + \"');\\n        position: fixed;\\n        z-index: -1;\\n        display: block;\\n        width: 100%;\\n        height: 100%;\\n        -webkit-filter: blur(\" + this.options.autoBlurValue + \"px);\\n        filter: blur(\" + this.options.autoBlurValue + \"px); \\n        top: 0;\\n        left: 0;\\n      }\\n    \",\n                t = document.createElement(\"style\");\n            t.type = \"text/css\", t.append(document.createTextNode(e)), document.head.appendChild(t), this.blurryStyleNode = t;\n          }\n        }\n      }, {\n        key: \"prepareDrawingCanvas\",\n        value: function value() {\n          this.drawBoardCanvas && this.drawBoardCanvas.parentElement && this.drawBoardCanvas.parentElement.removeChild(this.drawBoardCanvas);\n          var e = this.createCanvasNode();\n          e.style.position = \"fixed\", e.style.top = \"0\", e.style.left = \"0\", e.style.zIndex = \"-1\", this.drawBoardCanvas = e, this.drawBoardCanvasContext = e.getContext(\"2d\"), document.body.appendChild(this.drawBoardCanvas);\n        }\n      }, {\n        key: \"prepareImageCanvas\",\n        value: function value() {\n          var e = this.createCanvasNode();\n          this.imageCanvas = e, this.imageCanvasContext = e.getContext(\"2d\"), this.imageCanvasContext.lineCap = this.options.lineStyle, this.imageCanvasContext.shadowBlur = 30, this.imageCanvasContext.shadowColor = \"#000000\";\n        }\n      }, {\n        key: \"loadSelectedImage\",\n        value: function value() {\n          var e = this;\n          this.image || (this.image = new Image(), this.image.addEventListener(\"load\", function () {\n            return e.drawTail();\n          }), this.image.addEventListener(\"error\", function () {\n            return console.error(\"Failed to load image\");\n          }), this.image.src = this.options.image);\n        }\n      }, {\n        key: \"drawTail\",\n        value: function value() {\n          this.removeOldSteps(), window.cancelAnimationFrame(this.tailAnimationFrame), this.mouseSteps.length > 0 && (this.tailAnimationFrame = window.requestAnimationFrame(this.drawTail)), this.options.keepCleared || this.imageCanvasContext.clearRect(0, 0, this.imageCanvas.width, this.imageCanvas.height), this.createStrokeFromSteps();\n          var e = this.drawBoardCanvas.width / this.image.naturalWidth * this.image.naturalHeight,\n              t = this.drawBoardCanvas.width;\n          e < this.drawBoardCanvas.height && (e = this.drawBoardCanvas.height, t = this.drawBoardCanvas.height / this.image.naturalHeight * this.image.naturalWidth), this.drawBoardCanvasContext.drawImage(this.image, 0, 0, t, e), this.drawBoardCanvasContext.globalCompositeOperation = \"destination-in\", this.drawBoardCanvasContext.drawImage(this.imageCanvas, 0, 0), this.drawBoardCanvasContext.globalCompositeOperation = \"source-over\";\n        }\n      }, {\n        key: \"createStrokeFromSteps\",\n        value: function value() {\n          for (var e = Date.now(), t = 1; t < this.mouseSteps.length; t++) {\n            var n = (e - this.mouseSteps[t].time) / 1e3,\n                a = Math.max(1 - n, 0);\n            this.imageCanvasContext.strokeStyle = \"rgba(0,0,0,\" + a + \")\", this.imageCanvasContext.lineWidth = this.options.stroke, this.imageCanvasContext.beginPath(), this.imageCanvasContext.moveTo(this.mouseSteps[t - 1].x, this.mouseSteps[t - 1].y), this.imageCanvasContext.lineTo(this.mouseSteps[t].x, this.mouseSteps[t].y), this.imageCanvasContext.stroke();\n          }\n        }\n      }, {\n        key: \"removeOldSteps\",\n        value: function value() {\n          for (var e = Date.now(), t = 0; t < this.mouseSteps.length; t++) {\n            e - this.mouseSteps[t].time > 1e3 && (this.mouseSteps.length = t);\n          }\n        }\n      }, {\n        key: \"createCanvasNode\",\n        value: function value() {\n          var e = this.getElementDimensions(),\n              t = document.createElement(\"canvas\");\n          return t.width = e.width, t.height = e.height, t;\n        }\n      }, {\n        key: \"getElementNode\",\n        value: function value() {\n          var e = this.options.element;\n          return e && \"object\" === (void 0 === e ? \"undefined\" : a(e)) && \"nodeType\" in e ? e : document.querySelector(e || \"body\");\n        }\n      }, {\n        key: \"getElementDimensions\",\n        value: function value() {\n          return this.getElementNode().getBoundingClientRect();\n        }\n      }], [{\n        key: \"isCanvasSupported\",\n        value: function value() {\n          var e = document.createElement(\"canvas\");\n          return !(!e.getContext || !e.getContext(\"2d\"));\n        }\n      }]), e;\n    }();\n\n    t.default = r, e.exports = t.default;\n  }, function (e, t, n) {\n    e.exports = n(0);\n  }]);\n});","map":null,"metadata":{},"sourceType":"script"}