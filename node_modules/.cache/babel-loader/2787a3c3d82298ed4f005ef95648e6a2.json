{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport RecValue from './components/RecValue/RecValue';\nimport './App.css';\nvar app = new Clarifai.App({\n  apiKey: 'f695e6c1fc2d477598865bd7e8f70a4d'\n});\n\nvar detect =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var image, response, items, ul;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            image = document.getElementsByClassName('imagelink')[0].value;\n            _context.next = 3;\n            return app.models.predict(Clarifai.FOOD_MODEL, image);\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return createItems(response.outputs[0].data.concepts);\n\n          case 6:\n            items = _context.sent;\n            console.log(response);\n            ul = document.getElementsByClassName(\"ingredients\")[0];\n            ul.innerHTML = \"Ingredients:\" + items; //Changing the image     \n\n            document.getElementById('foodimage').src = image;\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function detect() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar createItems = function createItems(concepts) {\n  var items = concepts.reduce(function (accumulator, item) {\n    return accumulator + \"<li>\".concat(item.name, \", probability: \").concat(item.value, \"</li>\");\n  }, \"\");\n  return items;\n};\n\nvar particleOptions = {\n  particles: {\n    number: {\n      value: 250,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onButtonSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n    };\n\n    _this.state = {\n      input: '',\n      imageUrl: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particleOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(RecValue, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        imageUrl: this.state.imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\blod-\\smart-brain\\src\\App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Particles","Clarifai","FaceRecognition","RecValue","app","App","apiKey","detect","image","document","getElementsByClassName","value","models","predict","FOOD_MODEL","response","createItems","outputs","data","concepts","items","console","log","ul","innerHTML","getElementById","src","reduce","accumulator","item","name","particleOptions","particles","number","density","enable","value_area","onInputChange","event","setState","input","target","onButtonSubmit","imageUrl","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport RecValue from './components/RecValue/RecValue'\n\nimport './App.css';\n\n const app = new Clarifai.App({  \n  apiKey: 'f695e6c1fc2d477598865bd7e8f70a4d' \n});    \nconst detect = async () =>{      \n  const image = document.getElementsByClassName('imagelink')[0].value;     \n  const response = await app.models.predict(Clarifai.FOOD_MODEL,image);     \n  const items = await createItems(response.outputs[0].data.concepts);     \n  console.log(response);     \n  const ul = document.getElementsByClassName(\"ingredients\")[0];     \n  ul.innerHTML = \"Ingredients:\"+items;     \n  //Changing the image     \n  document.getElementById('foodimage').src = image; \n}  \nconst createItems = (concepts)=> {   \n  const items = concepts.reduce((accumulator, item)=>{     \n      return accumulator + `<li>${item.name}, probability: ${item.value}</li>`;   \n  },\"\");   \n  return items; \n}\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 250,\n      density: {\n        enable: true,\n        value_area: 800 \n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super ();\n    this.state = {\n      input: '',\n      imageUrl:''\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n  this.setState({imageUrl: this.state.input})\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Particles  className='particles'\n                params={particleOptions} \n        />\n      \n      <Navigation />\n      <Logo />\n      <ImageLinkForm onInputChange={this.onInputChange} \n      onButtonSubmit={this.onButtonSubmit} />\n      <Rank />\n      <RecValue />\n      <FaceRecognition imageUrl={this.state.imageUrl} />\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}