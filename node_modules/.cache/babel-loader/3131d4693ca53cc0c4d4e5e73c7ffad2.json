{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\blod-\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FoodRecognition from './components/FoodRecognition/FoodRecognition';\nimport RecValue from './components/RecValue/RecValue';\nimport './App.css'; //colors\n\nvar blue = '#70CFE1';\nvar green = '#85C85D';\nvar red = '#F4614C';\nvar yellow = \"#E5CF41\";\nvar orange = \"#F79D2A\";\nvar random = \"#81479b\"; //creatures sources\n\nvar blueSrc = 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/827672/creatureBlue.png';\nvar greenSrc = 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/827672/creatureGreen.png';\nvar redSrc = 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/827672/creatureRed.png';\nvar yellowSrc = \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/827672/creatureYellow.png\";\nvar orangeSrc = \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/827672/creature1.png\";\nvar Color = React.createClass({\n  displayName: \"Color\",\n  //set initial background to red and creature to red\n  getInitialState: function getInitialState() {\n    return {\n      color: red,\n      creature: redSrc\n    };\n  },\n  //random color and creature color\n  changeColorRandom: function changeColorRandom() {\n    var values = [blue, green, red, yellow, orange],\n        valueToUse = values[Math.floor(Math.random() * values.length)];\n    var creatures = [blueSrc, greenSrc, redSrc, yellowSrc, orangeSrc],\n        creatureToUse = creatures[Math.floor(Math.random() * creatures.length)];\n    var color = valueToUse;\n    var creature = creatureToUse;\n    this.setState({\n      color: color,\n      creature: creature\n    });\n  },\n  //color and creature blue\n  changeColorBlue: function changeColorBlue() {\n    var color = blue;\n    var creature = blueSrc;\n    this.setState({\n      color: color,\n      creature: creature\n    });\n  },\n  //color and creature green\n  changeColorGreen: function changeColorGreen() {\n    var color = green;\n    var creature = greenSrc;\n    this.setState({\n      color: color,\n      creature: creature\n    });\n  },\n  //color and creature red\n  changeColorRed: function changeColorRed() {\n    var color = red;\n    var creature = redSrc;\n    this.setState({\n      color: color,\n      creature: creature\n    });\n  },\n  //color and creature yellow\n  changeColorYellow: function changeColorYellow() {\n    var color = yellow;\n    var creature = yellowSrc;\n    this.setState({\n      color: color,\n      creature: creature\n    });\n  },\n  //color and creature orange\n  changeColorOrange: function changeColorOrange() {\n    var color = orange;\n    var creature = orangeSrc;\n    this.setState({\n      color: color,\n      creature: creature\n    });\n  },\n  render: function render() {\n    return React.createElement(\"div\", {\n      style: {\n        background: this.state.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Color Changer\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      style: {\n        background: blue\n      },\n      onClick: this.changeColorBlue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Blue\"), React.createElement(\"button\", {\n      style: {\n        background: green\n      },\n      onClick: this.changeColorGreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Green\"), React.createElement(\"button\", {\n      style: {\n        background: red\n      },\n      onClick: this.changeColorRed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Red\"), React.createElement(\"button\", {\n      style: {\n        background: yellow\n      },\n      onClick: this.changeColorYellow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Yellow\"), React.createElement(\"button\", {\n      style: {\n        background: orange\n      },\n      onClick: this.changeColorOrange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Orange\"), React.createElement(\"button\", {\n      style: {\n        background: random\n      },\n      onClick: this.changeColorRandom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Random\")), React.createElement(\"img\", {\n      src: this.state.creature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }));\n  }\n});\nvar app = new Clarifai.App({\n  apiKey: 'f695e6c1fc2d477598865bd7e8f70a4d'\n});\nvar particleOptions = {\n  particles: {\n    number: {\n      value: 250,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onButtonSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      app.models.predict(Clarifai.FOOD_MODEL, _this.state.input).then(function (response) {\n        _this.setState({\n          concepts: response.outputs[0].data.concepts\n        });\n      });\n    };\n\n    _this.state = {\n      input: '',\n      imageUrl: '',\n      concepts: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particleOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(FoodRecognition, {\n        imageUrl: this.state.imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(RecValue, {\n        concepts: this.state.concepts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\blod-\\smart-brain\\src\\App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Particles","Clarifai","FoodRecognition","RecValue","blue","green","red","yellow","orange","random","blueSrc","greenSrc","redSrc","yellowSrc","orangeSrc","Color","createClass","getInitialState","color","creature","changeColorRandom","values","valueToUse","Math","floor","length","creatures","creatureToUse","setState","changeColorBlue","changeColorGreen","changeColorRed","changeColorYellow","changeColorOrange","render","background","state","app","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","onInputChange","event","input","target","onButtonSubmit","imageUrl","models","predict","FOOD_MODEL","then","response","concepts","outputs","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FoodRecognition from './components/FoodRecognition/FoodRecognition';\nimport RecValue from './components/RecValue/RecValue'\n\nimport './App.css';\n\n\n//colors\nvar blue = '#70CFE1';\nvar green = '#85C85D';\nvar red = '#F4614C';\nvar yellow = \"#E5CF41\";\nvar orange = \"#F79D2A\";\nvar random =\"#81479b\";\n\n//creatures sources\nvar blueSrc = 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/827672/creatureBlue.png';\nvar greenSrc = 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/827672/creatureGreen.png';\nvar redSrc = 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/827672/creatureRed.png';\nvar yellowSrc = \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/827672/creatureYellow.png\";\nvar orangeSrc = \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/827672/creature1.png\";\n\n\nvar Color = React.createClass({\n  \n  //set initial background to red and creature to red\n  getInitialState: function () {\n  return { color: red, creature: redSrc};\n  },\n  \n  //random color and creature color\n  changeColorRandom: function () {\n  \n    var values = [blue,green,red,yellow, orange],\n        \n\nvalueToUse = values[Math.floor(Math.random() * values.length)];   \n    \n var creatures = [blueSrc,greenSrc,redSrc,yellowSrc, orangeSrc],\n   \ncreatureToUse = creatures[Math.floor(Math.random() * creatures.length)];   \n    \n  var color = valueToUse;\n  var creature = creatureToUse;\n\n  this.setState({ color: color, creature: creature });\n  },\n  \n//color and creature blue\n   changeColorBlue: function () {\n     \n   var color = blue;\n    var creature = blueSrc;\n  this.setState({ color: color, creature: creature });\n     \n   },\n  //color and creature green\n    changeColorGreen: function () {\n     \n   var color = green;\n var creature = greenSrc;\n  this.setState({ color: color, creature: creature });\n     \n   },\n  \n  //color and creature red\n    changeColorRed: function () {\n     \n   var color = red;\n  var creature = redSrc;\n  this.setState({ color: color, creature: creature });\n     \n   },\n  \n  //color and creature yellow\n   changeColorYellow: function () {\n     \n   var color = yellow;\n  var creature = yellowSrc;\n  this.setState({ color: color, creature: creature });\n     \n   },\n  \n  //color and creature orange\n   changeColorOrange: function () {\n     \n   var color = orange;\n  var creature = orangeSrc;\n  this.setState({ color: color, creature: creature });\n     \n   },\n  \n   render: function () {\n  return (\n  <div  style={{background: this.state.color}}>\n  <body>\n  <br/>\n  <br/>\n  <h1>\n  Color Changer\n  </h1>\n  <br />\n\n  <button style={{background: blue}} onClick={this.changeColorBlue}>\n  Blue\n  </button>\n   \n\n  <button style={{background: green}} onClick={this.changeColorGreen}>\n  Green\n  </button>\n   \n\n  <button style={{background: red}} onClick={this.changeColorRed}>\n  Red\n  </button>\n      \n\n  <button style={{background: yellow}} onClick={this.changeColorYellow}>\n  Yellow\n  </button>\n    \n   \n  <button style={{background: orange}} onClick={this.changeColorOrange}>\n  Orange\n  </button>\n      \n  <button style={{background: random}} onClick={this.changeColorRandom}>\n  Random\n  </button>\n    \n  </body>\n  <img src={this.state.creature} />\n  </div>\n  );\n   }\n  \n  \n});\n\n\nconst app = new Clarifai.App({\n  apiKey: 'f695e6c1fc2d477598865bd7e8f70a4d'\n });\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 250,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super ();\n    this.state = {\n      input: '',\n      imageUrl:'',\n      concepts: []\n    }\n  }\n\nonInputChange = (event) => {\n    this.setState({input: event.target.value});\n}\n\nonButtonSubmit = () => {\n  this.setState({imageUrl: this.state.input})\n    \n\n  app.models\n  .predict(\n    Clarifai.FOOD_MODEL,\n   this.state.input)\n   .then(response => {\n    this.setState({concepts: response.outputs[0].data.concepts});\n    }\n  );\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Particles  className='particles'\n                params={particleOptions} \n        />\n      \n      <Navigation />\n      <Logo />\n      <ImageLinkForm onInputChange={this.onInputChange} \n      onButtonSubmit={this.onButtonSubmit} />\n      <Rank />\n      <FoodRecognition imageUrl={this.state.imageUrl} />\n      <RecValue concepts={this.state.concepts}\n      />\n      \n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}